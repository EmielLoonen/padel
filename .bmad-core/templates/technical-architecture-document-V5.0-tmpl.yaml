template:
  id: technical-architecture-document-v5
  name: Technical Architecture Document
  version: 5.0
  output:
    format: markdown
    filename: docs/technical-architecture.md
    title: "{{customer_name}} Technical Architecture Document"

workflow:
  mode: interactive
  elicitation: advanced-elicitation

sections:
  - id: document-header
    title: Document Header
    instruction: |
      Create the document header with customer information and version details.
    sections:
      - id: customer-info
        title: Customer Information
        template: |
          # {{customer_name}}
          
          ## Technical Architecture Document 
          
          ![Backbase Logo][image1]
          
          | Version: | Date of Release: | Classification: | Authors: | Document Status: |
          |:---------|:-----------------|:----------------|:---------|:-----------------|
          | {{version}} | {{date_of_release}} | Confidential | {{author_name}} ({{author_email}}) | Initial Version |
      - id: revision-history
        title: Revision History
        type: table
        columns: [Version, Date, Description, Author, Backbase Sign Off]
        instruction: Track document versions and changes
      - id: stakeholders
        title: Stakeholders
        type: table
        columns: [Name, Role]
        instruction: List all stakeholders involved in the project
      - id: distribution
        title: Distribution
        type: table
        columns: [Version, Date, Recipient, Role]
        instruction: Track document distribution
      - id: table-of-contents
        title: Table of Contents
        instruction: Generate table of contents at the end of document creation

  - id: introduction
    title: Introduction
    instruction: |
      This section provides the foundation and context for the technical architecture document.
    sections:
      - id: purpose
        title: Purpose
        content: |
          The purpose of the TAD is to capture and detail all relevant architecture decisions made during the full lifecycle of the project. This includes the outcome of the Inception phase and any decisions or architectural changes taken throughout the duration of the project.
          
          Together with the Business Requirements (BRD) and the UX Strategy Documents, the TAD must remain a 'living' document, which is being updated regularly to reflect the latest state of the project.
          
          The following topics should be included in the TAD:
          - Infrastructure and deployment model  
          - Integration points  
          - Roles and responsibilities  
          - Security solution  
          - Non functional requirements  
          - Use of Backbase products and components
      - id: executive-summary
        title: Executive Summary
        instruction: |
          Keep this summary brief as it is for executive attention. Aim to use the customers own language to describe their objectives. {{customer_name}} are beginning a digital transformation journey with Backbase. This project will focus on 'Mobile first' for Retail.
          
          Key Considerations regarding architectural decisions. This is your chance to highlight any fundamental concerns. E.g. The solution will be hosted on the amazing platform, and will integrate to the core banking systems through incredible services currently in place.
          
          Examples:
          - Containerisation allows for reuse of the operating system (OS) hosting the container and shared resources typically on a virtual machine (VM). The Backbase product is micro-service based and designed to be leveraged by container orchestration systems. It is not considered ideal to use traditional application servers to host the Backbase product since the solution is comprised of several microservices.
          - The API gateway and APIs are a critical integration point for the entire solution. Key areas such as performance and availability of services emanate from here. These are external to the Backbase solution, and are managed and owned by the clients providers. All required APIs must be available for the solution to be implemented. The solution will use Mulesoft API Gateway, all required APIs will be developed on Mule.
          - The Enterprise Service Bus (ESB) in use likewise effects all aspects of performance and availability of the solution. This service is managed and owned by the clients providers. The client has an existing ActiveMQ ESB in place that will be used for the solution, the client is aware of the SLA given by the enterprise team supporting the ESB.
      - id: project-scope
        title: Project Scope
        instruction: |
          Add a table with each of the Backbase components used in the project as below.
          
          Create a comprehensive table showing:
          - Backbase components being used
          - Purpose within the architecture
          - Version information
          - Integration points

  - id: technical-requirements
    title: Technical Requirements
    instruction: |
      This section covers all technical requirements including non-functional requirements and compliance requirements.
    sections:
      - id: non-functional-requirements
        title: Non Functional Requirements
        instruction: |
          The NFRs below are ones that come up consistently on projects. Feel free to add any specific ones that come up with your client. In some cases suggested text has been provided.
        sections:
          - id: performance
            title: Performance
            content: |
              Backbase components have been developed and optimized to respond within the shortest possible time frame. However the overall response time is dictated by a number of factors, in particular the performance of 3rd party downstream systems. These systems are outside the control of Backbase, and thus the overall performance target defined above is highly dependent on the response times of these systems.
              
              Define the performance in terms of screen or page load time.
          - id: scalability
            title: Scalability
            content: |
              The solution should be highly scalable and allow the incremental addition of capacity. There should be no single component which cannot be scaled when extra capacity is needed.
          - id: capacity
            title: Capacity
            instruction: |
              Define the capacity or expected load on the system in terms of concurrent users or requests per second
              
              Note: If defining per concurrent users, please define what the bank means by a concurrent user (note: traditional number of HTTP sessions, doesn't translate well to concurrent users (as HTTP sessions stay around typically 20mins after the last users request))
              
              Document any future capacity or growth plans.
          - id: availability
            title: Availability
            content: |
              The system should be available 99.9% of the time
              Define any allowed maintenance windows.
          - id: internationalization
            title: Internationalization and Localization
            content: |
              The solution for the end users should be available in English and {{additional_language}}.
              
              {{customer_name}} will provide the localized content during the development process.
              
              The content should be abstracted from the code, using resource bundle files, or loaded remotely from a content management system.
              
              Internationalization in CXS: https://backbase.io/developers/documentation/cxs/6.3.4/understand_internationalization/
              Translate and localize widgets: https://backbase.io/developers/documentation/foundation-angular/8.0.0/internationalization/
          - id: analytics
            title: Analytics / Observability
            content: |
              Backbase services include a layer of analytics tooling known as "Observability" in the latest version of the Backbase product.
              The Observability layer is a generic wrapper framework that can track events under a subscriber, this allows integration with common providers such as Firebase, Google Analytics, Adobe and others.
              Please assess each journey for the level of analytics provided, the default level included in most journeys is "Screen View" level today, to track which screen the user is on.
              
              For Mobile, read more here: https://backbase.io/developers/documentation/mobile-devkit/observability/what-is-observability/
              
              For Web, read more here: https://backbase.io/developers/documentation/web-devkit/app-development/add-analytics-tracker-web/
              
              Detail requirements for the use of any specific analytics tools. Keep in mind the level of analytics the customer would like to capture. What are the requirements for web, mobile.
              
              Are there requirements that this should be on premise or not?
              
              Note: If using Firebase for mobile, basic analytics can be added for little project effort: https://support.google.com/firebase/answer/6317485?hl=en&ref_topic=6317484
          - id: accessibility
            title: Accessibility
            content: |
              Backbase provides out-of-the-box widgets that are developed with accessibility standards in mind, but the out-of-the-box widgets do not provide any level of certification for a specific accessibility standard.
              
              Achieving certification against an accessibility standard is something that is larger than what can be provided by the default Backbase widgets because it typically involves a wider range of requirements that need to be adhered to (such as overall UX, color schemes, navigation patterns, layouts, etc).
              
              Many of these aspects are outside of the control of the default Backbase components and very dependent on the design and implementation of your project.
              
              Our commitment is that our product doesn't limit the implementation to accomplish adherence to an accessibility standard. If such limiting factors are discovered during your project implementation, then these will be addressed by the Backbase product team.
          - id: cookies
            title: Cookies
            content: |
              The Backbase solution requires the use of HTTP cookies for security and session management. These cookies are deemed "strictly necessary" under EU directive 2009/136/EC.
              
              However, additional cookies for tracking or analytics (e.g. set from CX, or from 3rd party analytics providers), would not be deemed "strictly necessary", and therefore user consent needs to be provided before these cookies are used.
              
              Discuss with the customer the implications of the above sentence and if there is a requirement to gain user consent before using analytics, targeting, campaigns etc. Useful resource for background information: https://www.privacypolicies.com/blog/eu-cookie-law/
          - id: logging
            title: Logging
            content: |
              All Backbase components can output extensive log entries depending on the log level configured. No personally identifiable data shall be logged.
              
              In this section capture the following:
              - Destination of logs (file system, ELK, etc etc)
              - Log rotation requirements
              - Log retention requirements
              - Any specific data which needs to be captured per log entry (correlation ID, request ID, etc)
          - id: auditing
            title: Auditing
            instruction: |
              In this section describe any specific requirements around auditing from the customer.
              
              - What to log
              - How long to keep logs
              - Who can access logs
              
              Example: All user actions which cause a state change in the system should be audited. The audit log should be non modifiable and easily viewable by a compliance officer, or by a customer service agent.
          - id: monitoring
            title: Monitoring
            content: |
              Detail customer specific requirements around monitoring. Which tools will they use. Do Backbase have to expose any additional endpoints, or data for these tools to work?
              
              Monitor IPS services: https://backbase.io/developers/documentation/platform-services/2022.10/auth_public_urls/
          - id: push-notifications
            title: Push Notifications, Alerting and Engagements
            content: |
              From 2023.03 onwards Backbase makes use of the Engagements capability to orchestrate and structure notifications, messaging and engagements (marketing) to users.
              
              Push notification service Mobile SDK: https://backbase.io/developers/documentation/mobile-sdk/3.10/pub_sub_and_events/
              https://backbase.io/developers/documentation/foundation-services/2023.03/understand_push_notifications/
          - id: error-handling
            title: Error Handling
            instruction: |
              Describe the error handling strategy and requirements for the solution.

  - id: compliance-requirements
    title: Compliance Requirements
    instruction: |
      Use this section to capture any customer specific compliance requirements. Delete sections where no requirements have been identified, or that are not applicable.
    sections:
      - id: data
        title: Data
        instruction: |
          Detail any specific requirements, specifically around the following topics:
          - Regulation on geographic storage of data, or transmission of data outside specific geographic areas
          - Data retention policies (maybe overlaps with GDPR section below for EU clients)
      - id: regulatory
        title: Regulatory
        instruction: |
          Anything specific from the central bank or regulator specifically in the country? Will probably be discussed in each functional section, but document anything cross cutting here.
      - id: encryption
        title: Encryption
        instruction: |
          Detail any specific requirements for encryption of data, again just the requirement, the solution can be discussed in the security section:
          - Data at rest (DB encryption requirements)
          - Data in transit:
            - Between client and gateway
            - Internally between Backbase components
            - Between Backbase components and 3rd party systems
            - From 3rd party systems to Backbase
      - id: pci
        title: PCI
        instruction: |
          Will this project come within scope of PCI DSS compliance?
          
          IMPORTANT: Any Backbase component that stores, processes or transmits an unmasked PAN comes within the scope of PCI. This includes the front end (if the user is asked to input the PAN).
          
          PCI Compliance and a PCI audit affect all aspects of the solution (software, development, organization, people). Backbase do NOT want to be within the scope of PCI.
          
          This needs to be made very clear to the customer. Detail any measures taken here to ensure that we are not within PCI scope, such as:
          - No PAN is ever passed through or comes close to the Backbase solution (this includes other components on the same network subnet)
          - The Bank is implementing a tokenization solution to ensure the actual PAN never comes through or close to the Backbase solution.
          - Account IDs (unrelated to the PAN) will be used instead of the actual PAN when dealing with credit card accounts.
          - The working assumption is that no full PAN (primary account number) will ever pass through or be stored as part of this solution.
          - {{customer_name}} will need to ensure that the masked PAN data is sent in parts across multiple channels (SMS not recommended) to adhere to PCI-DSS requirements.
          
          IF THE ABOVE MEASURES CANNOT BE AGREED WITH THE CUSTOMER, YOU MUST APPROACH THE BACKBASE SECURITY GUILD FOR ADVICE ON NEXT STEPS
      - id: gdpr
        title: GDPR
        instruction: |
          Detail GDPR compliance requirements if applicable.
      - id: ada
        title: ADA
        content: |
          ADA is American with Disabilities act, and mainly concerns accessibility. This section may already be duplicated with the accessibility NFR section. Delete or replace one as necessary.
      - id: psd2
        title: PSD2
        instruction: |
          Detail PSD2 compliance requirements if applicable.
      - id: facta
        title: FACTA
        content: |
          FACTA - Foreign Account Tax Compliance Act (US). The main considerations to discuss with clients:
          - Are US citizens restricted from accessing some/all services?
          - Should additional data be collected from US citizens?
          - Do additional reports need to be generated?
          
          Note: This may not need to be brought up with the customer, it might be better to see if they come with something first.

  - id: solution
    title: Solution
    instruction: |
      This section describes the complete solution architecture including current state, target architecture, and implementation details.
    sections:
      - id: solution-overview
        title: Solution Overview
        instruction: |
          Give a brief overview of the proposed solution
        sections:
          - id: current-architecture
            title: Current Architecture (Optional)
            instruction: |
              In this subsection is expected to have a summary of the current architecture (If exists) which is intended to be replaced. Topics that can be mentioned here are: motivation of change, problems with the current architecture, unattended Non-Functional Requirements, etc. Also, if the architecture is based on an existing Backbase product such as CXP 5 line, it is relevant to mention used versions.
          - id: proposed-target-architecture
            title: Proposed Target Architecture
            instruction: |
              Please describe here all the considerations about the proposed architecture that is replacing the old architecture (if any). Give specific considerations such as main motivation, challenges, among others. Mention here, in a short way, all Backbase products that will form part of this architecture recalling that in the subsection "Adopt" you will be including details for this topic. A good starting point is to include a diagram that represents all these considerations.
          - id: technology-stack
            title: Technology Stack
            content: |
              The idea of the technology stack subsection is to list the technologies the project is using while keeping a reference to platform support for the products used in the solution. Keep in mind that this is the place to mention the vendors and versions for databases, message brokers, containerization platform, and in the case of traditional deployment: OS, JDK, App server, etc.
              
              - DBS platform support: https://backbase.io/developers/documentation/banking-services/2.21.6/platform_support/
              - CXS platform support: https://backbase.io/developers/documentation/cxs/6.3.4/platform_support/
              - Identity platform support: https://backbase.io/developers/documentation/identity-access-management/1.9.5/platform_support/
              - IPS platform support: https://backbase.io/developers/documentation/platform-services/2022.10/platform_support/
              - Experience manager platform support: https://backbase.io/developers/documentation/experience-manager/6.2.10/platform_support/
              - Platform support Mobile: https://backbase.io/developers/documentation/mobile-sdk/3.10/platform_support_for_mobile/
          - id: adopt-extend-build
            title: Overview (Adopt/Extend/Build)
            instruction: |
              **Adopt:** In our way of working we define a premise: Adopt, Extend and Build. By *Adopt* we mean the Backbase products that will be considered as part of the solution. Include in this subsection all Backbase products that will be part of the new architecture. Create a table for each big topic to cover (CX Services, DBS, Identity Services, Flow) and mention the used components and its purpose within the architecture.
              
              **Extend:** Describe the Backbase components that will be extended, and how they will be extended, (Behavior, Data extensions, Enhanced Journeys, Widget Layout slots)
              
              **Build:** Custom Journeys, Custom DBS integrations, etc.
              
              Create comprehensive tables showing the Adopt/Extend/Build breakdown for each major component area.

  - id: integrations
    title: Integrations
    instruction: |
      The purpose of this subsection is to enlist and describe, as an overview, the integration points of the solution. The integrations can be categorized as:
      - Content Services
      - Targeting Services
      - DBS Integrations: List the capabilities
      - Direct Integration Services
      - Web Tier Integrations
      - Mobile Integrations
      - Identity Services
      
      CXS Integration Services: https://community.backbase.com/documentation/cxs/latest/integration_services_extend

  - id: ingestion
    title: Ingestion
    instruction: |
      Describe the data ingestion strategy and approach.

  - id: data-sync-strategy
    title: Data Synchronization Strategy
    instruction: |
      This sub-section needs to define the data sync strategy after the initial ingestion.

  - id: multi-tenancy
    title: Multi-tenancy
    content: |
      Backbase supports multi-tenancy which allows different clients to have a different set of database settings and configurations in a single deployment.
      
      Multi tenancy refers to the ability of the solution to handle multiple different clients and configurations at **runtime**. This is achieved by the setting of a tenant id (TID) in the JWT when the user authenticates. Using this TID a different set of configuration or logic can be invoked when the user makes subsequent requests.
      
      It is important here to discuss with the client the difference between multi-tenancy and multi country/application. Multi-tenancy provides **runtime** configuration and isolation. Some customers confuse this with the ability to have different apps etc per country/brand (i.e. **build time**).
      
      Will the customer have separate deployments per country (e.g. for regulatory reasons?). If so, they do NOT need multi-tenancy. Only required if multiple countries/applications need to live in the same runtime.

  - id: third-party-components
    title: Third-party Components
    instruction: |
      List and describe any third-party components that will be used in the solution (optional, if we know at this point).

  - id: security-overview
    title: Security Overview
    instruction: |
      This section covers all security aspects of the solution.
    sections:
      - id: authentication
        title: Authentication
        content: |
          In this section describe the authentication flow. It is not necessary to describe the Backbase authentication model, this is described here: https://backbase.io/developers/documentation/platform-services/2022.10/understand_authentication_service/
          
          You should describe how authentication should work for:
          - End Users
          - Bank Users
          - System Users
          
          Build a custom Authentication Service: https://backbase.io/developers/documentation/platform-services/2022.10/build_a_custom_authentication_service/
          Use JWTs in Infrastructure and Platform Services: https://backbase.io/developers/documentation/platform-services/2022.10/use_jwts_in_ips/
          Understand OpenID Connect: https://backbase.io/developers/documentation/identity-access-management/1.9.5/_oidc/
          WebSDK session management: https://backbase.io/developers/documentation/web-sdk/1.16.9/session_management/
          Use the external JWT renewal mechanism: https://backbase.io/developers/documentation/platform-services/2022.10/external_jwt_renewal_mechanism/
          Identity Manage user sessions: https://backbase.io/developers/documentation/identity-access-management/1.9.5/user_session_management/
      - id: authorization
        title: Authorization
        content: |
          Role-based access control and permissions for CXS is described here: https://backbase.io/developers/documentation/cxs/6.3.4/understand_access_control/
          CXS roles and permissions: https://backbase.io/developers/documentation/cxp/5.9.1/permissions_grouproles
          CXS Publishing roles: https://backbase.io/developers/documentation/cxp/5.9.1/publishing_about/
          CXS Permissions: https://backbase.io/developers/documentation/cxs/6.3.4/permissions/
      - id: entitlements
        title: Entitlements and User Types
        content: |
          In this section, describe the user types and entitlements that will be assigned to each user. This can evolve over time. It is not necessary to describe how entitlements works, reference product documentation instead.
          
          Understand Access Control: https://backbase.io/developers/documentation/banking-services/2.21.6/entitlements_understand/
          Understand Limits: https://backbase.io/developers/documentation/banking-services/2.21.6/limits_understand/
          Understand Approvals: https://backbase.io/developers/documentation/banking-services/2.21.6/approvals_understand/
          
          Backbase uses an advanced entitlements engine to grant user authorization to fine grained business functions and privileges. These privileges can be managed via system to system APIs, or directly using a set of widgets available to company or bank administrators. For {{customer_name}} the following business functions will be granted per job type.
          
          Fill in this table based on the capabilities the bank will use.
      - id: sys2sys-mtls
        title: Sys2sys, mTLS, SSL certs
        instruction: |
          Describe system-to-system authentication and certificate requirements.
      - id: secrets-management
        title: Storage of Secrets, Key Rotation
        instruction: |
          Describe secrets management and key rotation requirements.
      - id: firewall-security
        title: Firewall/RP/WAF/DDoS
        instruction: |
          Describe firewall, reverse proxy, WAF, and DDoS protection requirements.
      - id: transaction-signing
        title: Transaction Signing
        instruction: |
          Describe transaction signing requirements if applicable.
      - id: session-management
        title: Session Management, Cookies
        instruction: |
          Describe session management and cookie requirements.
      - id: virus-scan
        title: Virus Scan (if batch upload)
        instruction: |
          Describe virus scanning requirements if batch uploads are involved.
      - id: data-encryption
        title: Data in Transit and at Rest Encryption
        instruction: |
          Describe encryption requirements for data in transit and at rest.
        sections:
          - id: data-in-transit
            title: Data in Transit
            instruction: |
              Describe encryption requirements for data in transit.
          - id: data-at-rest
            title: Data at Rest
            instruction: |
              Describe encryption requirements for data at rest.
      - id: jwt-encryption
        title: JWT Encryption Mechanisms
        instruction: |
          Describe JWT encryption and signing requirements.
      - id: security-headers
        title: Security Headers
        instruction: |
          Describe required security headers.
      - id: threat-modeling
        title: Threat Modeling
        content: |
          Discovering weaknesses in the design of a system is the specific goal of threat modeling. Synopsys' threat modeling approach can reveal security issues not fully addressed by the traditional methods of penetration testing and secure code review. Organizations benefit from this software design analysis because you can perform it without code to discover potential vulnerabilities early in the development cycle.

  - id: infrastructure-overview
    title: Infrastructure Overview
    instruction: |
      This section covers infrastructure and operational aspects.
    sections:
      - id: production-environment
        title: Production Environment
        instruction: |
          Describe the production environment including:
          - Traditional infra or cloud infra (majority customers on CX6 are cloud with containerised deployment)
          - Deployment topology / HA setup
          - List of service for deployment (min 2 instances each in PROD)
          - Web proxy in use
      - id: operational-monitoring
        title: Operational Monitoring
        content: |
          BB service monitoring using Prometheus, Grafana, Istio etc
      - id: log-strategy
        title: Log Strategy
        instruction: |
          Describe the logging strategy including:
          - Splunk or ELK (Logstash) etc
      - id: health-checking
        title: Health Checking
        instruction: |
          Describe health checking requirements and implementation.
      - id: performance-monitoring
        title: Performance Monitoring
        instruction: |
          Describe performance monitoring requirements.
      - id: metrics
        title: Metrics
        instruction: |
          Describe metrics collection and monitoring requirements.
      - id: instrumentation
        title: Instrumentation
        instruction: |
          Describe instrumentation requirements for monitoring and observability.

  - id: sdlc
    title: SDLC
    instruction: |
      This section covers the Software Development Life Cycle.
    sections:
      - id: environments
        title: Environments
        instruction: |
          Describe the environment strategy and setup.
      - id: ci-cd
        title: CI/CD
        content: |
          In this section describe the CI/CD flow specific to the customer.
          NOTE: If this is a BAAS project, please engage the BAAS team to help with this section.
          https://backbase.io/developers/documentation/cxs/6.3.4/setting_up_continuous_integration/
          Deployment architecture DBS: https://backbase.io/developers/documentation/banking-services/2.21.6/choose_your_deployment_architecture/
          https://backbase.io/developers/documentation/deploy-on-prem/
          Deployment Identity: https://backbase.io/developers/documentation/identity-access-management/1.9.5/plan_your_deployment/
          https://backbase.io/developers/documentation/deploy-on-prem/
          
          Understand CI in CXS: https://backbase.io/developers/documentation/cxs/6.3.4/setting_up_continuous_integration/
          Understand content publishing and approvals: https://backbase.io/developers/documentation/cxs/6.3.4/understand_content_publishing_approvals/
        sections:
          - id: technologies-tools
            title: Technologies/Tools
            instruction: |
              Describe the technologies and tools used in CI/CD.
          - id: process-between-environments
            title: Process Between Environments
            instruction: |
              Describe the process for moving between environments.
          - id: handoffs
            title: Handoffs
            instruction: |
              Describe handoff processes between teams.
          - id: deployment-diagrams
            title: Deployment Diagrams
            instruction: |
              Include deployment diagrams if applicable.
          - id: mobile-deployment
            title: Mobile Deployment (if applicable)
            instruction: |
              Describe mobile deployment strategy if applicable.
      - id: branching-strategy
        title: Branching Strategy
        instruction: |
          In this section we should document the branching strategy that will be followed in the upcoming project.
      - id: testing-strategy
        title: Testing Strategy
        instruction: |
          Ref test document where applicable
          Agreement/recommendations on test coverage, quality gates
          Agreement on pen, performance testing - where this happens
      - id: release-strategy
        title: Release Strategy
        content: |
          For new projects, release branches can follow the general convention of *release/sprint-x*, or depending on the preference of the customer, follow well-known and generally accepted conventions such as Semantic Versioning (for eg. *release/1.0.0*). This should be agreed upon by the Product Owner (PO) and development team and consistently followed through the project lifecycle.
          
          A CI/CD pipeline into a pre-production environment should be created for the release branch, which should be kept in a stable state, ready to be tested.
          
          When the release branch is deemed ready to be shipped, it should be merged back into *master* and tagged for easy future reference. Depending on the prevalent deployment policies and schedule of the customer, the resulting release build can be promoted into a UAT or production environment. The corresponding release notes and other necessary documentation for the release should be published at the same time. The release branch may then be removed.
      - id: upgrade-strategy
        title: Upgrade Strategy
        instruction: |
          This should cover issues in relation to frequency of upgrades of services, upgrades to mobile apps (should users be forced to updated etc etc)

  - id: appendices
    title: Appendices
    instruction: |
      This section contains supporting documentation and references.
    sections:
      - id: references
        title: References
        instruction: |
          You can link directly to any product documentation inline in the document, however if there are any additional references please add them here.
      - id: sizing
        title: Sizing
        content: |
          Steps to take:
          - Sizing calculator: http://calculator.uat.backbase.test/
          - Export report and add to appendix. Example: https://drive.google.com/open?id=1Yvv0gDmePruNyHkWdlyRwyZO5xIopChn
      - id: service-catalog
        title: Service Catalog
        content: |
          Service catalog template: https://drive.google.com/open?id=1CBOrQATbDz5NxNHFCfFkYtTiX4ChxvUoKeh9kvBSAw0
      - id: security-checklist
        title: Security Checklist
        content: |
          - Security guidelines for DBS: https://backbase.io/developers/documentation/banking-services/2.21.6/security_guidelines/
          - Security guidelines for IPS: https://backbase.io/developers/documentation/platform-services/2022.01/security_guidelines/
          - Security training of Backbase Academy: https://bbacademy.learnupon.com/store?utf8=%E2%9C%93&st=security+training&commit=
          - Backbase Security Checklist - Template: https://docs.google.com/spreadsheets/d/16nPyILvyG4rhERhA7dmGBQv936O4jEsqw9OPNfW_NkY/edit?ts=5da82843#gid=425903188
          - Security MobileSDK: https://backbase.io/developers/documentation/mobile-sdk/3.10/security/
      - id: go-live-checklist
        title: Go Live Checklist
        content: |
          - GoLive checklist CXS: https://backbase.io/developers/documentation/cxs/6.3.4/go_live_checklist/
          - GoLive checklist DBS: https://backbase.io/developers/documentation/deploy-on-prem/deploy/services/go-live-checklist/
      - id: shared-responsibility-model
        title: Backbase Shared Responsibility Model
        instruction: |
          TO DO - Add shared responsibility model content.

  - id: signoff
    title: Signoff
    instruction: |
      This section contains the signoff information.
    sections:
      - id: backbase-signoff
        title: Backbase
        type: table
        columns: [Role, Date]
        instruction: Backbase signoff information
      - id: customer-signoff
        title: Customer
        type: table
        columns: [Role, Date]
        instruction: Customer signoff information 